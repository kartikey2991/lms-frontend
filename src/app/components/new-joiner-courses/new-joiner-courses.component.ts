import { Component ,OnInit } from '@angular/core';
import { CourseService } from '../../services/course.service';
import { Course } from '../../models/course.model';
// import { EnrollmentService } from '../../services/enrollment.service';
// import { Enrollments } from '../../models/enrollment.model';
// import { UserService } from '../../services/user.service';
import { Router } from '@angular/router';
import { QueryService } from '../../services/query.service';
import { Query } from '../../models/query.model';
import { CommonModule } from '@angular/common';
import { HeaderComponent } from '../header/header.component';

@Component({
  selector: 'app-new-joiner-courses',
  standalone: true,
  imports: [CommonModule, HeaderComponent],
  templateUrl: './new-joiner-courses.component.html',
  styleUrl: './new-joiner-courses.component.css'
})



export class NewJoinerCoursesComponent implements OnInit{
queryText: any;
  ngOnInit(): void {
    throw new Error('Method not implemented.');
  }

  // courses: Course[] = [];
  // // enrollments: Enrollments[]=[];
  // filteredCourses: Course[]=[];
  // queryText: string = '';
  // selectedCourseId: number | null = null;
  // mentorId: number | null = null;
  // showForm: boolean = false;

  // constructor(private courseService: CourseService,
  //   // private enrollmentService: EnrollmentService,
  //   // private userService: UserService,
  //   private router:Router,
  // private queryService: QueryService) {}

  // ngOnInit(): void {

  //   const newJoinerId=this.userService.getUserId()??123;
  //     console.log(newJoinerId);
  //     const mySet=new Set<number>();
  //     this.enrollmentService.fetchEnrollmentsByNewJoinID(newJoinerId).subscribe((data: Enrollments[])=>{
  //       this.enrollments=data;
  //       console.log("This is enrollments of student !",this.enrollments);
  //       //loop through enrollments
  //       for (let i = 0; i < this.enrollments.length; i++) {
  //         mySet.add(this.enrollments[i].courseID);
  //       }

  //     });
      
  //     console.log("My Set is ",mySet);
  //     this.courseService.getCourses().subscribe((data: Course[]) => {
  //       console.log('Fetched courses:', data); // Debugging line to check the fetched data
  //       this.courses = data.filter(course => course.approved);
  //       console.log('Filtered courses:', this.courses); // Debugging line to check the filtered data
  //       this.filteredCourses = this.courses.filter(course => mySet.has(course.courseId));

  //     });
  // }


  // showQueryForm(courseId: number, mentorId: number): void {
  //   this.selectedCourseId = courseId;
  //   this.mentorId = mentorId;
  //   this.showForm = !this.showForm;
  // }

  // submitQuery(): void {
  //   if (this.queryText.trim() === '') {
  //     alert('Query text cannot be empty.'); 
  //     return;
  //   }

  //   if (this.selectedCourseId === null || this.mentorId === null) {
  //     alert('Course ID and Mentor ID are required.');
  //     return;
  //   }

  //   const newQuery = new Query(
  //     0, // queryId will be generated by the backend
  //     this.queryText,
  //     '', // responseText will be empty initially
  //     this.userService.getUserId()??0, // or however you retrieve newJoinerId
  //     this.mentorId,
  //     this.selectedCourseId,
  //     false // Assuming default status is false
  //   );
  //   console.log("This is our query ",newQuery);
  //   this.queryService.createQuery(newQuery).subscribe(
  //     response => {
  //       console.log('Query created successfully:', response);
  //       this.showForm = false; // Hide the form after submission
  //       this.queryText = ''; // Clear the query text
  //     },
  //     error => {
  //       console.error('Error creating query:', error);
  //       // Handle error as needed
  //     }
  //   );
  // }

}
